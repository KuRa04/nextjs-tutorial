{"ast":null,"code":"import _defineProperty from \"/Users/asakurataichi/Documents/programing/Practice/nextjs/nextjs-blog/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport fs from 'fs';\nimport path from 'path';\nimport matter from 'gray-matter';\nvar postsDirectory = path.join(process.cwd(), 'posts');\nexport function getSortedPostsData() {\n  var fileNames = fs.readdirSync(postsDirectory);\n  var allPostsData = fileNames.map(function (fileName) {\n    var id = fileName.replace(/\\.md$/, '');\n    var fullPath = path.join(postsDirectory, fileName);\n    var fileContents = fs.readFileSync(fullPath, 'utf-8');\n    var matterResult = matter(fileContents);\n    return _objectSpread({\n      id: id\n    }, matterResult.data);\n  });\n  return allPostsData.sort(function (a, b) {\n    if (a.date < b.date) {\n      return 1;\n    } else {\n      return -1;\n    }\n  });\n}","map":{"version":3,"sources":["/Users/asakurataichi/Documents/programing/Practice/nextjs/nextjs-blog/lib/posts.js"],"names":["fs","path","matter","postsDirectory","join","process","cwd","getSortedPostsData","fileNames","readdirSync","allPostsData","map","fileName","id","replace","fullPath","fileContents","readFileSync","matterResult","data","sort","a","b","date"],"mappings":";;;;;;AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,IAAMC,cAAc,GAAGF,IAAI,CAACG,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,OAAzB,CAAvB;AAEA,OAAO,SAASC,kBAAT,GAA8B;AACjC,MAAMC,SAAS,GAAGR,EAAE,CAACS,WAAH,CAAeN,cAAf,CAAlB;AACA,MAAMO,YAAY,GAAGF,SAAS,CAACG,GAAV,CAAc,UAAAC,QAAQ,EAAI;AAE3C,QAAMC,EAAE,GAAGD,QAAQ,CAACE,OAAT,CAAiB,OAAjB,EAA0B,EAA1B,CAAX;AAGA,QAAMC,QAAQ,GAAGd,IAAI,CAACG,IAAL,CAAUD,cAAV,EAA0BS,QAA1B,CAAjB;AACA,QAAMI,YAAY,GAAGhB,EAAE,CAACiB,YAAH,CAAgBF,QAAhB,EAA0B,OAA1B,CAArB;AAGA,QAAMG,YAAY,GAAGhB,MAAM,CAACc,YAAD,CAA3B;AAGA;AACIH,MAAAA,EAAE,EAAFA;AADJ,OAEOK,YAAY,CAACC,IAFpB;AAIH,GAhBoB,CAArB;AAkBA,SAAOT,YAAY,CAACU,IAAb,CAAkB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC/B,QAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB;AACjB,aAAO,CAAP;AACH,KAFD,MAEO;AACH,aAAO,CAAC,CAAR;AACH;AACJ,GANM,CAAP;AAOH","sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport matter from 'gray-matter'\n\nconst postsDirectory = path.join(process.cwd(), 'posts')\n\nexport function getSortedPostsData() {\n    const fileNames = fs.readdirSync(postsDirectory)\n    const allPostsData = fileNames.map(fileName => {\n\n        const id = fileName.replace(/\\.md$/, '')\n\n\n        const fullPath = path.join(postsDirectory, fileName)\n        const fileContents = fs.readFileSync(fullPath, 'utf-8')\n\n\n        const matterResult = matter(fileContents)\n\n\n        return {\n            id,\n            ...matterResult.data\n        }\n    })\n\n    return allPostsData.sort((a, b) => {\n        if (a.date < b.date) {\n            return 1\n        } else {\n            return -1\n        }\n    })\n}"]},"metadata":{},"sourceType":"module"}